- hosts: all
  become: true
  vars:
    mysql_root_password: "example"            # root 비밀번호
    replication_user: "exampleuser"           # 복제 전용 사용자
    replication_password: "examplepass"       # 복제 사용자 비밀번호

  roles:
    - /opt/MOKONIX/ansible_project/roles/monitoring

  tasks:
    - name: Deploy containers
      import_tasks: /opt/MOKONIX/ansible_project/playbooks/deploy_containers.yml

    - name: Sync containers
      import_tasks: /opt/MOKONIX/ansible_project/playbooks/sync_containers.yml

    - name: Install MariaDB server
      apt:
        name: mariadb-server
        state: present

    - name: Ensure MariaDB is started
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Set the MariaDB root password
      mysql_user:
        name: root
        host: localhost
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create replication user
      mysql_user:
        name: "{{ replication_user }}"
        host: "%"
        password: "{{ replication_password }}"
        priv: "*.*:REPLICATION SLAVE"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Configure my.cnf for replication
      template:
        src: templates/my.cnf.j2
        dest: /etc/mysql/my.cnf
      notify: Restart MySQL

    - name: Get the current binary log position for replication
      command: mysql -u root -p'{{ mysql_root_password }}' -e "SHOW MASTER STATUS;"
      register: master_status
      changed_when: false

    - name: Set replication on master1
      mysql_replication:
        mode: master
        master_log_file: "{{ master_status.stdout_lines[1].split()[0] }}"
        master_log_pos: "{{ master_status.stdout_lines[1].split()[1] }}"
        login_user: root
        login_password: "{{ mysql_root_password }}"
      when: inventory_hostname == 'master2'

    - name: Set replication on master2
      mysql_replication:
        mode: master
        master_host: "{{ hostvars['master1'].ansible_host }}"
        master_user: "{{ replication_user }}"
        master_password: "{{ replication_password }}"
        master_log_file: "{{ master_status.stdout_lines[1].split()[0] }}"
        master_log_pos: "{{ master_status.stdout_lines[1].split()[1] }}"
        login_user: root
        login_password: "{{ mysql_root_password }}"
      when: inventory_hostname == 'master1'

    - name: Sync files between servers
      command: rsync -avz /var/www/html/ user@destination_server:/var/www/html/
      delegate_to: destination_server
      ignore_errors: yes

  post_tasks:
    - name: Run backup script
      shell: /opt/MOKONIX/ansible_project/backup.sh
      when: inventory_hostname == 'primary_host'

  handlers:
    - name: Restart MariaDB
      service:
        name: mysql
        state: restarted
