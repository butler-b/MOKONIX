- name: Ensure the project directory exists on Docker server
  file:
    path: /opt/MOKONIX/ansible_project
    state: directory
    mode: '0755'

- name: Synchronize role files to Docker server
  synchronize:
    src: "/opt/MOKONIX/ansible_project/roles/{{ item }}/files/"
    dest: "/opt/MOKONIX/ansible_project/{{ item }}/"
    delete: yes
    recursive: yes
    rsync_opts:
      - "--delete"
  with_items:
    - app
    - db
    - monitoring
    - proxyserver
    - webserver

- name: Get the process ID holding the apt lock
  shell: ps aux | grep -i '[a]pt'
  register: apt_processes
  ignore_errors: yes

- name: Kill the apt process
  shell: kill -9 $(ps aux | grep '[a]pt' | awk '{print $2}' || true
  when: apt_processes.stdout != ""
  ignore_errors: yes
  become: yes

- name: Remove apt lock files
  file:
    path: /var/lib/apt/lists/lock
    state: absent
  become: yes

- name: Run dpkg --configure -a to fix any interrupted installations
  command: dpkg --configure -a
  become: yes

- name: Clean apt cache
  command: apt-get clean
  become: yes

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
  retries: 2
  delay: 10
  ignore_errors: yes

- name: Install necessary packages
  block:
    - name: Install individual package
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      retries: 2
      delay: 10
      register: apt_install
      until: apt_install is succeeded
      ignore_errors: yes
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: Log failed installation
      debug:
        msg: "Failed to install package {{ item }}."
      when: apt_install is failed
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

- name: Add Docker's official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker APT repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

- name: Update APT package index
  apt:
    update_cache: yes

- name: Install Docker
  apt:
    name: docker-ce
    state: present
    update_cache: yes

- name: Start and enable Docker service
  systemd:
    name: docker
    enabled: yes
    state: started

- name: Install Docker Compose
  shell: |
    mkdir -p /usr/local/bin
    curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose

- name: Run Docker Compose to start the web server
  shell: docker-compose -f /opt/MOKONIX/ansible_project/docker-compose.yml up -d --build
  args:
    chdir: /opt/MOKONIX/ansible_project
