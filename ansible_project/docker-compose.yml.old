services:
  proxyserver:
    build:
      context: ./proxyserver
    container_name: proxyserver
    ports:
      - "80:80"
    depends_on:
      - webserver
      - nginx_prometheus_exporter
    networks:
      - app-network

  nginx_prometheus_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx_prometheus_exporter
    ports:
      - "9113:9113"
    networks:
      - app-network

  webserver:
    build:
      context: ./webserver
    container_name: webserver
    depends_on:
      - app
    networks:
      - app-network

  app:
    build:
      context: ./app
    container_name: flask_app
    expose:
      - "5000"
    networks:
      - app-network
    depends_on:
      - db
    environment:
      FLASK_ENV: development
      FLASK_DEBUG: 1

  db:
    build: ./db
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: hospitaldb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - ./grafana:/var/lib/grafana

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - app-network

  elasticsearch:
    image: elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - elk-network

  logstash:
    image: logstash:7.10.1
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    networks:
      - elk-network

  kibana:
    image: kibana:7.10.1
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - elk-network

networks:
  app-network:
    driver: bridge
  elk-network:
    driver: bridge

volumes:
  db_data:
