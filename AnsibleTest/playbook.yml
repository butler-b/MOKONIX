---
- name: Configure VMware Environment
  hosts: localhost
  gather_facts: no

  vars:
    # Common variables
    vcenter_hostname: "vcenter.local"
    vcenter_username: "administrator@vsphere.local"
    vcenter_password: "vcenter_password"
    datacenter: "DC1"
    cluster: "Cluster1"
    datastore: "datastore1"
    network: "VM Network"
    vm_template: "centos_template"

    # ESXi hosts settings
    esxi_hosts:
      - name: esxi01
        hostname: esxi01.local
        ip: "192.168.1.11"
      - name: esxi02
        hostname: esxi02.local
        ip: "192.168.1.12"

    # VM settings
    app_vms:
      - name: "web01"
        ip: "192.168.1.21"
        role: "nginx"
      - name: "app01"
        ip: "192.168.1.22"
        role: "flask"
      - name: "db01"
        ip: "192.168.1.23"
        role: "mariadb"

  tasks:
    - name: Configure ESXi Hosts
      community.vmware.vmware_host:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        cluster_name: "{{ cluster }}"
        datacenter_name: "{{ datacenter }}"
        esxi_hostname: "{{ item.hostname }}"
        state: present
      loop: "{{ esxi_hosts }}"

    - name: Add ESXi hosts to vCenter
      community.vmware.vmware_host:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        cluster_name: "{{ cluster }}"
        datacenter_name: "{{ datacenter }}"
        esxi_hostname: "{{ item.hostname }}"
        state: present
      loop: "{{ esxi_hosts }}"

    - name: Create VMs for 3-Tier Application
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        datacenter: "{{ datacenter }}"
        cluster: "{{ cluster }}"
        name: "{{ item.name }}"
        template: "{{ vm_template }}"
        power_on: yes
        networks:
          - name: "{{ network }}"
            ip: "{{ item.ip }}"
            netmask: "255.255.255.0"
            gateway: "192.168.1.1"
        disk:
          - size_gb: 20
            type: thin
            datastore: "{{ datastore }}"
        hardware:
          memory_mb: 2048
          num_cpus: 2
      loop: "{{ app_vms }}"

    - name: Install and configure Nginx on web server
      when: item.role == "nginx"
      community.vmware.vmware_vm_shell:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        vm_id: "web01"
        vm_shell: |
          yum install -y epel-release
          yum install -y nginx
          systemctl start nginx
          systemctl enable nginx
          firewall-cmd --permanent --zone=public --add-service=http
          firewall-cmd --reload
      loop: "{{ app_vms }}"

    - name: Install and configure Flask on app server
      when: item.role == "flask"
      community.vmware.vmware_vm_shell:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        vm_id: "app01"
        vm_shell: |
          yum install -y python3 python3-pip
          pip3 install Flask
          cat << EOF > /var/www/html/app.py
          from flask import Flask
          app = Flask(__name__)
          @app.route('/')
          def hello():
              return "Hello from Flask!"
          if __name__ == "__main__":
              app.run(host='0.0.0.0')
          EOF
          nohup python3 /var/www/html/app.py &
          firewall-cmd --permanent --zone=public --add-port=5000/tcp
          firewall-cmd --reload
      loop: "{{ app_vms }}"

    - name: Install and configure MariaDB on DB server
      when: item.role == "mariadb"
      community.vmware.vmware_vm_shell:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        vm_id: "db01"
        vm_shell: |
          yum install -y mariadb-server
          systemctl start mariadb
          systemctl enable mariadb
          mysql_secure_installation
          firewall-cmd --permanent --zone=public --add-service=mysql
          firewall-cmd --reload
      loop: "{{ app_vms }}"
