apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxyserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxyserver
  template:
    metadata:
      labels:
        app: proxyserver
    spec:
      containers:
      - name: proxyserver
        image: proxyserver:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: proxyserver
spec:
  selector:
    app: proxyserver
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-prometheus-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-prometheus-exporter
  template:
    metadata:
      labels:
        app: nginx-prometheus-exporter
    spec:
      containers:
      - name: nginx-prometheus-exporter
        image: nginx/nginx-prometheus-exporter:latest
        ports:
        - containerPort: 9113
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-prometheus-exporter
spec:
  selector:
    app: nginx-prometheus-exporter
  ports:
    - protocol: TCP
      port: 9113
      targetPort: 9113
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webserver
  template:
    metadata:
      labels:
        app: webserver
    spec:
      containers:
      - name: webserver
        image: webserver:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: webserver
spec:
  selector:
    app: webserver
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: flask-app:latest
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_ENV
          value: "development"
        - name: FLASK_DEBUG
          value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: flask-app
spec:
  selector:
    app: flask-app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: db:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "example"
        - name: MYSQL_DATABASE
          value: "hospitaldb"
        - name: MYSQL_USER
          value: "exampleuser"
        - name: MYSQL_PASSWORD
          value: "examplepass"
        ports:
        - containerPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
